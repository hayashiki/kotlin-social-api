#spring:
#  datasource:
##    url: jdbc:mysql://localhost:3306/sample_db?useSSL=false&allowPublicKeyRetrieval=true
#    url: jdbc:mysql://0.0.0.0:3306/sample?useSSL=false
##    &useSSL=false&allowPublicKeyRetrieval=true
#    username: sample
#    password: secret

spring:
  profiles:
    active: local

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
    properties:
      hibernate:
        format_sql: true
        use_jdbc_metadata_defaults: false # https://github.com/pgjdbc/pgjdbc/issues/1102
        jdbc.lob.non_contextual_creation: true
  hateoas:
    use-hal-as-default-json-media-type: false


app:
  link:
    host: http://localhost:8080
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
  slack:
    channel: https://hooks.slack.com/services/foo/bar
  kakao:
    apiKey: 1234
    searchKeywordUrl: https://dapi.kakao.com
  facebook:
    graphUrl: https://graph.facebook.com/v3.3